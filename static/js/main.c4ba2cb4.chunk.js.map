{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","Spinner","xmlns","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","cx","cy","fill","r","attributeName","repeatCount","dur","keyTimes","values","begin","calcMode","ErrorMessage","objectFit","src","img","alt","MarvelService","_this","_classCallCheck","_apiBase","_apiKey","_baseOffset","getResource","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","res","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","stop","_x","apply","arguments","getAllCharacters","_callee2","offset","_args2","_context2","length","undefined","data","results","map","_transformCharacter","getOneCharacter","_ref3","_callee3","id","_context3","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","_Component","_inherits","_super","_createSuper","_len","args","Array","_key","call","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","_createClass","key","value","this","_this$state","errorMessage","spinner","content","View","onClick","mjolnir","Component","CharList","chars","newItemLoading","charEnded","onCharsLoaded","newChars","ended","_toConsumableArray","onRequest","onCharsLoading","itemsRefs","setRef","ref","push","console","log","focusOnItem","forEach","item","classList","remove","add","focus","_this2","imgStyle","i","tabIndex","props","onCharSelected","onKeyUp","e","_this3","Content","disabled","Skeleton","_Fragment","CharInfo","charId","prevProps","prevState","skeleton","ErrorBoundary","err","errInfo","App","selectedChar","decoration","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4ba2cb4.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: 'auto', background: 'rgb(255, 255, 255)', display: 'block', shapeRendering: 'auto'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <circle cx=\"30\" cy=\"50\" fill=\"#d71c25\" r=\"20\">\r\n            <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;0.5;1\" values=\"30;70;30\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            <circle cx=\"70\" cy=\"50\" fill=\"#322d2d\" r=\"20\">\r\n            <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;0.5;1\" values=\"30;70;30\" begin=\"0s\"></animate>\r\n            </circle>\r\n            <circle cx=\"30\" cy=\"50\" fill=\"#d71c25\" r=\"20\">\r\n            <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;0.5;1\" values=\"30;70;30\" begin=\"-0.5s\"></animate>\r\n            <animate attributeName=\"fill-opacity\" values=\"0;0;1;1\" calcMode=\"discrete\" keyTimes=\"0;0.499;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\"></animate>\r\n            </circle>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","\r\n\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=1b431546c9862750583ab94f838ae125';\r\n    _baseOffset = 210;\r\n\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getOneCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?&${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,181)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        })\n    }\n    \n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    componentDidMount() {\n        this.updateChar();\n        // this.intervalId = setInterval(this.updateChar(), 3000);\n    }\n\n    componentWillUnmount() {\n        // clearInterval(this.intervalId);\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getOneCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    };\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.updateChar}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail,homepage,wiki} = char\n    let objectFit = null;\n    thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? objectFit = \"contain\" : objectFit = \"cover\"\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} style={{objectFit: objectFit}} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        chars: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n\n    onCharsLoaded = (newChars) => {\n\n        let ended = false;\n        if(newChars.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({chars, offset}) => ({\n            chars: [...chars, ...newChars],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))          \n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    \n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharsLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharsLoaded)\n            .catch(this.onError);\n    } \n\n    onCharsLoading = () => {\n        this.setState({\n            newItemLoading: true,\n        })\n    }\n\n    itemsRefs = [];\n\n    setRef = (ref) => {\n        this.itemsRefs.push(ref)\n        console.log(this.itemsRefs)\n    }\n\n    focusOnItem = (id) => {\n        this.itemsRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemsRefs[id].classList.add('char__item_selected');\n        this.itemsRefs[id].focus();\n    }\n\n    Content(chars) {\n        let imgStyle = null;\n        const items = chars.map((item,i) => {\n            item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? imgStyle = 'contain' : imgStyle = 'unset';\n\n            return (\n                <li tabIndex={0} ref={this.setRef} className=\"char__item\" key={item.id} \n                onClick={() => {\n                    this.props.onCharSelected(item.id); \n                    this.focusOnItem(i)\n                }}\n                onKeyUp={(e) => {\n                    if(e.key === ' ' || e.key === 'Enter') {\n                        this.props.onCharSelected(item.id); \n                        this.focusOnItem(i)\n                    } \n                }}\n                >\n                    <img src={item.thumbnail} alt={item.name} style={{objectFit: imgStyle}}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render () {\n        const {chars, loading, error, newItemLoading, offset, charEnded} = this.state;\n        const items = this.Content(chars);\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\" \n                    onClick={() => this.onRequest(offset)}\n                    disabled={newItemLoading}\n                    style={{display: charEnded ? 'none' : 'block'}}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes, { number } from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n   \n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n   \n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if(!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n        this.marvelService.getOneCharacter(charId).then(this.onCharLoaded).catch(this.onError)\n\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        })\n    }\n    \n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n   \n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n    return (\n        <div className=\"char__info\">\n           {skeleton}\n           {errorMessage}\n           {spinner}\n           {content}\n        </div>\n    )\n   }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char\n    let objectFit = null;\n    objectFit = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? \"contain\" : \"unset\"\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={{objectFit: objectFit}}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics for this character'}\n                {\n                    comics.map((item, i) => {\n                        if(i < 10) {\n                            return (\n                                <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li>\n                            )\n                        }                     \n                    })\n                }    \n            </ul>\n        </>\n    )\n} \n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n    \r\n    componentDidCatch(err, errInfo) {\r\n        console.log(err, errInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children; \r\n    }\r\n}   \r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n    return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                <ErrorBoundary><RandomChar/></ErrorBoundary>\n                <div className=\"char__content\">\n                    <ErrorBoundary><CharList onCharSelected={this.onCharSelected}/></ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharInfo charId={this.state.selectedChar}/>\n                    </ErrorBoundary>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n   }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}