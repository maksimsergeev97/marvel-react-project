{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SinglePage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getCharacterByName","name","res","charName","results","map","_transformaSingleCharacter","getAllCharacters","_ref2","_callee2","offset","_args2","_context2","_transformCharacter","getOneCharacter","_ref3","_callee3","id","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","thumbnail","path","extension","slice","homepage","urls","wiki","comics","items","_comics$textObject","title","price","prices","pageCount","language","textObject","AppBanner","_jsxs","className","children","avengers","avengersLogo","SinglePage","Component","dataType","useParams","setData","_useMarvelService","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","Spinner","content","_Fragment"],"mappings":"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","file":"static/js/7.ab1fa826.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=1b431546c9862750583ab94f838ae125';\r\n    const _baseOffset = 210;\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name.charName}&${_apiKey}`);\r\n        return res.data.results.map(_transformaSingleCharacter);\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getOneCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?&${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformaSingleCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            id: char.id\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,181)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not avaible',\r\n            id: comics.id,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            language: comics.textObject?.language || 'en-us'\r\n        }\r\n    }\r\n    return {loading, error, getAllCharacters, getOneCharacter, getCharacterByName, clearError, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n        setProcess('loading');\r\n\r\n        try{\r\n            const response = await fetch(url, {method, body, headers});\r\n    \r\n            if(!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            \r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            setProcess('confirmed');\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n        setProcess('loading');\r\n    }, [])\r\n\r\n    return {loading, request, error, clearError, process};\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n    const {loading, error, getComic, getOneCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData()\r\n    }, [id]);\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'comic' :\r\n                getComic(id).then(onDataLoaded);\r\n                break;\r\n            case 'character' :\r\n                getOneCharacter(id).then(onDataLoaded);\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data)\r\n    }\r\n\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !data) ? <Component data={data}/> : null;\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SinglePage;"],"sourceRoot":""}